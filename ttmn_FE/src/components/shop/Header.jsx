import { useEffect, useState } from "react";
import { Link, useNavigate, useLocation } from "react-router-dom";

const Header = () => {
  const [categories, setCategories] = useState([]);
  const [keyword, setKeyword] = useState("");
  const [user, setUser] = useState(null);
  const [cartCount, setCartCount] = useState(0);
  const navigate = useNavigate();
  const location = useLocation();

  // --- Helper: cart key theo user ---
  const getCartKey = (userObj = null) => {
    const u = userObj ?? JSON.parse(localStorage.getItem("user"));
    return u ? `cart_${u.id}` : "cart_guest";
  };

  // --- C·∫≠p nh·∫≠t cartCount (t·ªïng qty) d·ª±a tr√™n user hi·ªán t·∫°i ---
  const updateCartCount = (userObj = null) => {
    try {
      const key = getCartKey(userObj);
      const cart = JSON.parse(localStorage.getItem(key)) || [];
      // t√≠nh t·ªïng s·ªë l∆∞·ª£ng (qty) ‚Äî fallback qty = 1 n·∫øu kh√¥ng c√≥
      const count = cart.reduce((sum, item) => sum + (item.qty || 1), 0);
      setCartCount(count);
    } catch (err) {
      setCartCount(0);
      console.error("Error reading cart from localStorage:", err);
    }
  };

  // --- Load user & cart l·∫ßn ƒë·∫ßu ---
  const loadUserAndCart = () => {
    const storedUser = localStorage.getItem("user");
    const parsedUser = storedUser ? JSON.parse(storedUser) : null;
    setUser(parsedUser);
    updateCartCount(parsedUser);
  };

  // Khi mount: load category, user & cart, ƒëƒÉng k√Ω listener
  useEffect(() => {
    loadUserAndCart();

    // L·∫•y danh m·ª•c
    fetch("http://127.0.0.1:8000/api/categories")
      .then((res) => res.json())
      .then((data) => {
        if (data.success) setCategories(data.data);
      })
      .catch((err) => console.error("L·ªói khi load category:", err));

    // Khi localStorage thay ƒë·ªïi ·ªü tab kh√°c -> storage event
    const onStorage = (e) => {
      // n·∫øu thay ƒë·ªïi li√™n quan t·ªõi cart_* ho·∫∑c user -> reload
      if (!e.key) {
        // clear() g·ªçi, just reload
        loadUserAndCart();
        return;
      }
      if (e.key.startsWith("cart_") || e.key === "user" || e.key === "token" || e.key === "cart_guest") {
        loadUserAndCart();
      }
    };

    // custom events (s·ª≠ d·ª•ng trong c√πng tab): 'cartUpdated' v√† 'userChanged'
    const onCartUpdated = () => updateCartCount();
    const onUserChanged = () => loadUserAndCart();

    window.addEventListener("storage", onStorage);
    window.addEventListener("cartUpdated", onCartUpdated);
    window.addEventListener("userChanged", onUserChanged);

    return () => {
      window.removeEventListener("storage", onStorage);
      window.removeEventListener("cartUpdated", onCartUpdated);
      window.removeEventListener("userChanged", onUserChanged);
    };
  }, []);

  // Khi route thay ƒë·ªïi (v√≠ d·ª• redirect sau login), refresh user & cart ƒë·ªÉ lu√¥n ƒë·ªìng b·ªô
  useEffect(() => {
    loadUserAndCart();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [location.pathname]);

  const handleLogout = () => {
    // X√≥a user & token (kh√¥ng x√≥a cart c·ªßa user)
    localStorage.removeItem("user");
    localStorage.removeItem("token");

    // C·∫≠p nh·∫≠t state sang guest v√† load cart_guest
    setUser(null);
    updateCartCount(null);

    // Emit custom events ƒë·ªÉ component kh√°c (Cart, ProductAdd...) c·∫≠p nh·∫≠t
    window.dispatchEvent(new Event("userChanged"));
    window.dispatchEvent(new Event("cartUpdated"));

    navigate("/");
  };

  // T√¨m ki·∫øm
  const handleSearch = (e) => {
    e.preventDefault();
    if (keyword.trim() !== "") {
      navigate(`/search/${keyword}`);
      setKeyword("");
    }
  };

  const isActive = (path) => location.pathname === path;

  return (
    <>
      {/* ==== HEADER ==== */}
      <header className="header bg-white border-bottom shadow-sm">
        <div className="container d-flex align-items-center justify-content-between py-2 flex-wrap">
          {/* LOGO */}
          <div className="logo">
            <Link to="/" className="text-decoration-none brand-text">
              üç¶ iCream
            </Link>
          </div>

          {/* T√åM KI·∫æM */}
          <div className="search-container flex-grow-1 mx-4">
            <form onSubmit={handleSearch} className="search-form justify-content-center">
              <input
                type="text"
                className="form-control"
                placeholder="T√¨m ki·∫øm s·∫£n ph·∫©m..."
                value={keyword}
                onChange={(e) => setKeyword(e.target.value)}
              />
              <button type="submit" className="search-btn">
                üîç
              </button>
            </form>
          </div>

          {/* USER ACTIONS */}
          <div className="header-actions d-flex align-items-center gap-3">
            {user ? (
              <>
                <span className="text-dark">
  üëã Xin ch√†o,{" "}
  <Link
    to="/account"
    className="text-decoration-none fw-bold"
    style={{ color: "#e91e63" }}
    title="Xem trang c√° nh√¢n"
  >
    {user.name}
  </Link>
</span>

                <button onClick={handleLogout} className="btn btn-outline-danger btn-sm">
                  ƒêƒÉng xu·∫•t
                </button>
              </>
            ) : (
              <>
                <Link to="/login" className="btn btn-outline-primary btn-sm">
                  ƒêƒÉng nh·∫≠p
                </Link>
                <Link to="/register" className="btn btn-primary btn-sm">
                  ƒêƒÉng k√Ω
                </Link>
              </>
            )}

            {/* üõí Gi·ªè h√†ng */}
            <Link
              to="/cart"
              className="btn btn-outline-secondary btn-sm position-relative"
              title="Xem gi·ªè h√†ng"
            >
              üõí Gi·ªè h√†ng
              {cartCount > 0 && (
                <span
                  className="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger"
                  style={{ fontSize: "0.7rem" }}
                >
                  {cartCount}
                </span>
              )}
            </Link>
          </div>
        </div>
      </header>

      {/* ==== BANNER ==== */}
      {!["/login", "/register"].includes(location.pathname) && (
        <>
          <div
            className="header-banner position-relative"
            style={{
              width: "100%",
              height: "380px",
              backgroundImage: "url('/src/assets/shop/images/header.jpg')",
              backgroundSize: "cover",
              backgroundPosition: "center",
              backgroundRepeat: "no-repeat",
            }}
          >
            <div
              style={{
                position: "absolute",
                top: 0,
                left: 0,
                width: "100%",
                height: "100%",
                backgroundColor: "rgba(0, 0, 0, 0.3)",
              }}
            ></div>

            <div
              className="banner-text text-white text-center"
              style={{
                position: "absolute",
                top: "50%",
                left: "50%",
                transform: "translate(-50%, -50%)",
                zIndex: 2,
              }}
            >
              <h1 className="fw-bold display-5 text-uppercase" style={{ color: "#ff4081" }}>
                üç¶ iCream ‚Äì Sweet Every Moment
              </h1>
              <p className="lead">H∆∞∆°ng v·ªã t∆∞∆°i m√°t ‚Äì Ng·ªçt ng√†o t·ª´ng ph√∫t gi√¢y</p>
            </div>
          </div>

          {/* PH·∫¶N L·ª¢I √çCH */}
          <div className="benefits py-4 border-bottom bg-white">
            <div className="container d-flex justify-content-between align-items-center flex-wrap text-center">
              <div className="benefit-item d-flex align-items-center gap-2">
                <i className="bi bi-truck fs-3" style={{ color: "#e91e63" }}></i>
                <div>
                  <strong>V·∫≠n chuy·ªÉn mi·ªÖn ph√≠</strong>
                  <div className="text-muted small">Cho ƒë∆°n h√†ng &gt; 500.000ƒë</div>
                </div>
              </div>

              <div className="benefit-item d-flex align-items-center gap-2">
                <i className="bi bi-gift fs-3" style={{ color: "#e91e63" }}></i>
                <div>
                  <strong>Mua 2 ƒë∆∞·ª£c gi·∫£m gi√°</strong>
                  <div className="text-muted small">L√™n ƒë·∫øn 10% cho ƒë∆°n h√†ng ti·∫øp</div>
                </div>
              </div>

              <div className="benefit-item d-flex align-items-center gap-2">
                <i className="bi bi-award fs-3" style={{ color: "#e91e63" }}></i>
                <div>
                  <strong>Ch·ª©ng nh·∫≠n ch·∫•t l∆∞·ª£ng</strong>
                  <div className="text-muted small">S·∫£n ph·∫©m ki·ªÉm ƒë·ªãnh an to√†n</div>
                </div>
              </div>

              <div className="benefit-item d-flex align-items-center gap-2">
                <i className="bi bi-headset fs-3" style={{ color: "#e91e63" }}></i>
                <div>
                  <strong>Hotline: 19002812</strong>
                  <div className="text-muted small">H·ªó tr·ª£ tr·ª±c ti·∫øp nhanh ch√≥ng</div>
                </div>
              </div>
            </div>
          </div>
        </>
      )}

      {/* NAVIGATION */}
      <nav className="navbar navbar-expand-lg navbar-light bg-white border-bottom">
        <div className="container">
          <div className="navbar-nav mx-auto">
            <Link
              to="/about"
              className={`nav-link mx-3 ${isActive("/about") ? "active fw-bold" : ""}`}
              style={{ color: isActive("/about") ? "#e91e63" : "#333" }}
            >
              GI·ªöI THI·ªÜU
            </Link>

            {/* DROPDOWN S·∫¢N PH·∫®M */}
            <div className="nav-item dropdown mx-3">
              <Link
                to="/product"
                className={`nav-link dropdown-toggle ${
                  location.pathname.includes("/category") ? "fw-bold" : ""
                }`}
                role="button"
                data-bs-toggle="dropdown"
                aria-expanded="false"
                style={{
                  color: location.pathname.includes("/category") ? "#e91e63" : "#333",
                }}
              >
                S·∫¢N PH·∫®M
              </Link>

              <ul className="dropdown-menu">
                <li>
                  <Link to="/product" className="dropdown-item">
                    üåü T·∫•t c·∫£ s·∫£n ph·∫©m
                  </Link>
                </li>
                <li><hr className="dropdown-divider" /></li>

                {categories.length > 0 ? (
                  categories.map((cat) => (
                    <li key={cat.id}>
                      <Link to={`/category/${cat.id}`} className="dropdown-item">
                        {cat.name}
                      </Link>
                    </li>
                  ))
                ) : (
                  <li className="dropdown-item text-muted">ƒêang t·∫£i...</li>
                )}
              </ul>
            </div>

            <Link
              to="/contact"
              className={`nav-link mx-3 ${isActive("/contact") ? "fw-bold" : ""}`}
              style={{ color: isActive("/contact") ? "#e91e63" : "#333" }}
            >
              LI√äN H·ªÜ
            </Link>

            <Link
              to="/news"
              className={`nav-link mx-3 ${isActive("/news") ? "fw-bold" : ""}`}
              style={{ color: isActive("/news") ? "#e91e63" : "#333" }}
            >
              TIN T·ª®C
            </Link>
          </div>
        </div>
      </nav>
    </>
  );
};

export default Header;
