import { useEffect, useState } from "react";
import { useParams, Link } from "react-router-dom";
import axios from "axios";

function ProductShow() {
  const { id } = useParams(); // l·∫•y id t·ª´ URL
  const [product, setProduct] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");
  const [quantity, setQuantity] = useState(1);

  useEffect(() => {
    fetchProduct();
  }, [id]);

  const fetchProduct = async () => {
    try {
      const res = await axios.get(`http://127.0.0.1:8000/api/products/${id}`);
      setProduct(res.data.data || res.data); // t√πy c·∫•u tr√∫c response
    } catch (err) {
      console.error(err);
      setError("Kh√¥ng th·ªÉ t·∫£i s·∫£n ph·∫©m n√†y.");
    } finally {
      setLoading(false);
    }
  };

  // ‚úÖ Th√™m v√†o gi·ªè h√†ng
  const handleAddToCart = () => {
    const existingCart = JSON.parse(localStorage.getItem("cart")) || [];
    const existingItem = existingCart.find((item) => item.id === product.id);

    if (existingItem) {
      existingItem.quantity += quantity;
    } else {
      existingCart.push({
        id: product.id,
        name: product.name,
        price: product.price_sale,
        thumbnail: product.thumbnail,
        quantity: quantity,
      });
    }

    localStorage.setItem("cart", JSON.stringify(existingCart));
    alert("üõí ƒê√£ th√™m v√†o gi·ªè h√†ng!");
  };

  if (loading) return <div className="loading">ƒêang t·∫£i...</div>;
  if (error) return <div className="error">{error}</div>;
  if (!product) return <div className="error">Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m.</div>;

  return (
    <div className="product-show-container">
      <div className="back-link">
        <Link to="/admin/product">‚Üê Quay l·∫°i danh s√°ch</Link>
      </div>

      <div className="product-show">
        <div className="product-image">
          <img
            src={`http://127.0.0.1:8000/uploads/products/${product.thumbnail}`}
            alt={product.name}
            onError={(e) => (e.target.src = "http://127.0.0.1:8000/images/placeholder.jpg")}
          />
        </div>

        <div className="product-info">
          <h2>{product.name}</h2>
          <p><strong>Slug:</strong> {product.slug}</p>
          <p><strong>Gi√° g·ªëc:</strong> {product.price_root.toLocaleString()} ‚Ç´</p>
          <p><strong>Gi√° khuy·∫øn m√£i:</strong> {product.price_sale.toLocaleString()} ‚Ç´</p>
          <p><strong>S·ªë l∆∞·ª£ng c√≤n:</strong> {product.qty}</p>
          <p><strong>M√¥ t·∫£:</strong> {product.description || "Kh√¥ng c√≥ m√¥ t·∫£"}</p>
          <p><strong>Chi ti·∫øt:</strong> {product.detail || "Kh√¥ng c√≥ chi ti·∫øt"}</p>
          <p><strong>Danh m·ª•c ID:</strong> {product.category_id}</p>
          <p><strong>Th∆∞∆°ng hi·ªáu ID:</strong> {product.brand_id}</p>
          <p><strong>Tr·∫°ng th√°i:</strong> {product.status === 1 ? "Hi·ªÉn th·ªã" : "·∫®n"}</p>

          <div className="quantity-control">
            <label>S·ªë l∆∞·ª£ng:</label>
            <input
              type="number"
              min="1"
              value={quantity}
              onChange={(e) => setQuantity(Number(e.target.value))}
            />
          </div>

          <button onClick={handleAddToCart} className="btn-add-cart">
            üõí Th√™m v√†o gi·ªè h√†ng
          </button>
        </div>
      </div>
    </div>
  );
}

export default ProductShow;
