import { useEffect, useState } from "react";
import { Link, useNavigate } from "react-router-dom";

function Cart() {
  const [cartItems, setCartItems] = useState([]);
  const navigate = useNavigate();

  // üß† L·∫•y key gi·ªè h√†ng theo user ƒëƒÉng nh·∫≠p (ƒë·ªÉ m·ªói user c√≥ gi·ªè ri√™ng)
  const getCartKey = () => {
    const user = JSON.parse(localStorage.getItem("user"));
    return user ? `cart_${user.id}` : "cart_guest";
  };

  // ‚úÖ Load gi·ªè h√†ng khi m·ªü trang ho·∫∑c c√≥ thay ƒë·ªïi localStorage
  useEffect(() => {
    const loadCart = () => {
      const key = getCartKey();
      const storedCart = JSON.parse(localStorage.getItem(key)) || [];
      setCartItems(storedCart);
    };

    loadCart();

    // L·∫Øng nghe thay ƒë·ªïi gi·ªØa c√°c tab
    window.addEventListener("storage", loadCart);
    return () => window.removeEventListener("storage", loadCart);
  }, []);

  // ‚úÖ L∆∞u gi·ªè h√†ng v√†o localStorage
  const saveCart = (updatedCart) => {
    const key = getCartKey();
    localStorage.setItem(key, JSON.stringify(updatedCart));
    setCartItems(updatedCart);
    window.dispatchEvent(new Event("storage"));
  };

  // ‚úÖ C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m
  const updateQuantity = (id, newQty) => {
    if (newQty < 1) return;
    const updated = cartItems.map((item) =>
      item.id === id ? { ...item, qty: newQty } : item
    );
    saveCart(updated);
  };

  // ‚úÖ X√≥a 1 s·∫£n ph·∫©m
  const handleRemove = (id) => {
    const updated = cartItems.filter((item) => item.id !== id);
    saveCart(updated);
  };

  // ‚úÖ X√≥a to√†n b·ªô gi·ªè h√†ng
  const handleClearCart = () => {
    if (window.confirm("üóëÔ∏è B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a to√†n b·ªô gi·ªè h√†ng kh√¥ng?")) {
      const key = getCartKey();
      localStorage.removeItem(key);
      setCartItems([]);
      window.dispatchEvent(new Event("storage"));
    }
  };

  // ‚úÖ T√≠nh t·ªïng ti·ªÅn
  const total = cartItems.reduce(
    (sum, item) => sum + item.qty * (item.price_sale || item.price_root),
    0
  );

  // ‚úÖ N·∫øu gi·ªè h√†ng tr·ªëng
  if (cartItems.length === 0)
    return (
      <div className="container py-5 text-center">
        <h4>üõí Gi·ªè h√†ng tr·ªëng</h4>
        <Link to="/" className="btn btn-outline-primary mt-3">
          Quay l·∫°i mua h√†ng
        </Link>
      </div>
    );

  // ‚úÖ Giao di·ªán ch√≠nh
  return (
    <div className="container mt-4">
      <div className="d-flex justify-content-between align-items-center mb-4">
        <h3 className="mb-0">Gi·ªè h√†ng c·ªßa b·∫°n</h3>
        <button
          className="btn btn-outline-danger btn-sm"
          onClick={handleClearCart}
        >
          <i className="fas fa-trash-alt me-1"></i> X√≥a to√†n b·ªô gi·ªè h√†ng
        </button>
      </div>

      <div className="table-responsive">
        <table className="table align-middle text-center">
          <thead className="table-light">
            <tr>
              <th>H√¨nh ·∫£nh</th>
              <th>S·∫£n ph·∫©m</th>
              <th>Gi√°</th>
              <th>S·ªë l∆∞·ª£ng</th>
              <th>T·ªïng</th>
              <th></th>
            </tr>
          </thead>
          <tbody>
            {cartItems.map((item) => (
              <tr key={item.id}>
                <td>
                  <img
                    src={`http://127.0.0.1:8000/uploads/products/${item.thumbnail}`}
                    alt={item.name}
                    style={{
                      width: "60px",
                      height: "60px",
                      objectFit: "cover",
                      borderRadius: "6px",
                    }}
                  />
                </td>
                <td className="fw-semibold">{item.name}</td>
                <td className="text-danger fw-semibold">
                  {(item.price_sale || item.price_root).toLocaleString("vi-VN")}‚Ç´
                </td>
                <td>
                  <div className="d-flex justify-content-center align-items-center">
                    <button
                      className="btn btn-sm btn-outline-secondary me-2"
                      onClick={() => updateQuantity(item.id, item.qty - 1)}
                    >
                      ‚àí
                    </button>
                    <input
                      type="number"
                      min="1"
                      value={item.qty}
                      className="form-control text-center"
                      style={{ width: "70px" }}
                      onChange={(e) =>
                        updateQuantity(item.id, parseInt(e.target.value) || 1)
                      }
                    />
                    <button
                      className="btn btn-sm btn-outline-secondary ms-2"
                      onClick={() => updateQuantity(item.id, item.qty + 1)}
                    >
                      +
                    </button>
                  </div>
                </td>
                <td className="fw-semibold">
                  {(item.qty * (item.price_sale || item.price_root)).toLocaleString(
                    "vi-VN"
                  )}
                  ‚Ç´
                </td>
                <td>
                  <button
                    className="btn btn-sm btn-outline-danger"
                    onClick={() => handleRemove(item.id)}
                  >
                    X√≥a
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      {/* ‚úÖ T·ªïng c·ªông v√† n√∫t thanh to√°n */}
      <div className="text-end mt-4">
        <h5>
          T·ªïng c·ªông:{" "}
          <span className="text-danger fw-bold">
            {total.toLocaleString("vi-VN")}‚Ç´
          </span>
        </h5>
        <button
          className="btn btn-success mt-2 px-4"
          onClick={() => {
            const token = localStorage.getItem("token");
            if (!token) {
              alert("üîí Vui l√≤ng ƒëƒÉng nh·∫≠p tr∆∞·ªõc khi thanh to√°n!");
              navigate("/login");
            } else {
              localStorage.setItem("last_cart_key", getCartKey());
              navigate("/checkout");
            }
          }}
        >
          Thanh to√°n
        </button>
      </div>
    </div>
  );
}

export default Cart;
