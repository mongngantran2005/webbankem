import { useEffect, useState } from "react";
import { useNavigate, useLocation } from "react-router-dom";

function Checkout() {
  const [cart, setCart] = useState([]);
  const [user, setUser] = useState(null);
  const [address, setAddress] = useState("");
  const [phone, setPhone] = useState("");
  const [note, setNote] = useState("");
  const navigate = useNavigate();
  const location = useLocation();

  useEffect(() => {
    const storedUser = JSON.parse(localStorage.getItem("user"));
    setUser(storedUser);

    // üü© N·∫øu c√≥ s·∫£n ph·∫©m truy·ªÅn qua state (mua ngay)
    if (location.state && location.state.product) {
      const { product } = location.state;
      setCart([
        {
          ...product,
          qty: 1,
        },
      ]);
    } else {
      // üü¶ N·∫øu kh√¥ng c√≥, l·∫•y gi·ªè h√†ng t·ª´ localStorage
      const storedCart = JSON.parse(localStorage.getItem("cart")) || [];
      setCart(storedCart);
    }
  }, [location.state]);

  const subtotal = cart.reduce(
    (sum, item) => sum + item.qty * (item.price_sale || item.price_root),
    0
  );
  const shippingFee = 30000;
  const discount = 0;
  const total = subtotal + shippingFee - discount;

  const handleCheckout = async () => {
    if (!user) {
      alert("Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ thanh to√°n!");
      navigate("/login");
      return;
    }
    if (!address || !phone) {
      alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin giao h√†ng!");
      return;
    }

    try {
      const res = await fetch("http://127.0.0.1:8000/api/checkout", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${localStorage.getItem("token")}`,
        },
        body: JSON.stringify({
          user_id: user.id,
          address,
          phone,
          note,
          total,
          items: cart,
        }),
      });

      const data = await res.json();

      if (data.success) {
        alert("üéâ ƒê·∫∑t h√†ng th√†nh c√¥ng! ƒê∆°n h√†ng ƒëang ƒë∆∞·ª£c x·ª≠ l√Ω.");
        // N·∫øu l√† mua nhi·ªÅu s·∫£n ph·∫©m th√¨ xo√° gi·ªè h√†ng
        if (!location.state?.product) {
          localStorage.removeItem("cart");
          window.dispatchEvent(new Event("cartUpdated"));
        }
        navigate("/");
      } else {
        alert("‚ùå Thanh to√°n th·∫•t b·∫°i, vui l√≤ng th·ª≠ l·∫°i.");
      }
    } catch (error) {
      console.error("L·ªói khi thanh to√°n:", error);
      alert("C√≥ l·ªói x·∫£y ra khi g·ª≠i ƒë∆°n h√†ng!");
    }
  };

  if (cart.length === 0) {
    return (
      <div className="container py-5 text-center">
        <h4>Gi·ªè h√†ng tr·ªëng</h4>
        <a href="/" className="btn btn-outline-primary mt-3">
          Mua s·∫Øm ngay
        </a>
      </div>
    );
  }

  return (
    <div className="container py-5">
      <h3 className="text-center mb-4 fw-bold">Th√¥ng Tin Giao H√†ng</h3>

      {/* Form th√¥ng tin giao h√†ng */}
      <div className="row mb-5">
        <div className="col-md-6 mb-3">
          <label className="form-label fw-semibold">H·ªç t√™n:</label>
          <input
            type="text"
            className="form-control"
            value={user?.name || ""}
            disabled
          />
        </div>
        <div className="col-md-6 mb-3">
          <label className="form-label fw-semibold">S·ªë ƒëi·ªán tho·∫°i:</label>
          <input
            type="text"
            className="form-control"
            value={phone}
            onChange={(e) => setPhone(e.target.value)}
            placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
          />
        </div>
        <div className="col-md-6 mb-3">
          <label className="form-label fw-semibold">ƒê·ªãa ch·ªâ:</label>
          <input
            type="text"
            className="form-control"
            value={address}
            onChange={(e) => setAddress(e.target.value)}
            placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ giao h√†ng"
          />
        </div>
        <div className="col-md-6 mb-3">
          <label className="form-label fw-semibold">Ghi ch√∫:</label>
          <textarea
            className="form-control"
            rows="1"
            value={note}
            onChange={(e) => setNote(e.target.value)}
            placeholder="Ghi ch√∫ th√™m (n·∫øu c√≥)..."
          ></textarea>
        </div>
      </div>

      {/* Chi ti·∫øt s·∫£n ph·∫©m */}
      <h4 className="text-center mb-3">
        üõí <span className="fw-bold">Chi ti·∫øt s·∫£n ph·∫©m</span>
      </h4>
      <div className="table-responsive">
        <table className="table table-bordered align-middle text-center">
          <thead className="table-light">
            <tr>
              <th>STT</th>
              <th>H√¨nh ·∫£nh</th>
              <th>S·∫£n ph·∫©m</th>
              <th>Gi√°</th>
              <th>S·ªë l∆∞·ª£ng</th>
              <th>Th√†nh ti·ªÅn</th>
            </tr>
          </thead>
          <tbody>
            {cart.map((item, index) => (
              <tr key={item.id}>
                <td>{index + 1}</td>
                <td>
                  <img
                    src={`http://127.0.0.1:8000/uploads/products/${item.thumbnail}`}
                    alt={item.name}
                    style={{
                      width: "60px",
                      height: "60px",
                      objectFit: "cover",
                      borderRadius: "6px",
                    }}
                  />
                </td>
                <td>{item.name}</td>
                <td>
                  {(item.price_sale || item.price_root).toLocaleString("vi-VN")}{" "}
                  VND
                </td>
                <td>{item.qty}</td>
                <td>
                  {(
                    item.qty * (item.price_sale || item.price_root)
                  ).toLocaleString("vi-VN")}{" "}
                  VND
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      {/* T·ªïng c·ªông */}
      <div className="card mt-3 mb-4">
        <div className="card-body">
          <p>T·∫°m t√≠nh: {subtotal.toLocaleString("vi-VN")} VND</p>
          <p>Ph√≠ v·∫≠n chuy·ªÉn: {shippingFee.toLocaleString("vi-VN")} VND</p>
          <p>Gi·∫£m gi√°: {discount.toLocaleString("vi-VN")} VND</p>
          <hr />
          <h5>
            <strong>
              T·ªïng thanh to√°n:{" "}
              <span className="text-danger">
                {total.toLocaleString("vi-VN")} VND
              </span>
            </strong>
          </h5>
        </div>
      </div>

      <div className="text-center">
        <button className="btn btn-success px-5 py-2" onClick={handleCheckout}>
          ‚úÖ X√°c nh·∫≠n ƒë·∫∑t h√†ng
        </button>
      </div>
    </div>
  );
}

export default Checkout;
